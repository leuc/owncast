---

name: goreleaser
on:
  pull_request:
  push:

jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v2
      - uses: actions/setup-node@v2
      - uses: actions/checkout@v2
      - name: Install Go Pkger
        run: go get github.com/markbates/pkger/cmd/pkger
      - uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --snapshot --skip-publish --skip-sign --rm-dist

  other-arch:
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: armv7
            distro: ubuntu20.04
          - arch: armv6
            distro: buster
          - arch: s390x
            distro: ubuntu20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster)
                apt-get update -q -y
                apt-get install -q -y golang goreleaser npm
                go get github.com/markbates/pkger/cmd/pkger
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac

          run: |
            goreleaser release --skip-sign --skip-publish --rm-dist --snapshot
            cp dist/*zip /artifacts/

      - name: Show the artifact on host
        run: |
          ls -al "${PWD}/artifacts"
